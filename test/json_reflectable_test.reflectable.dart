// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.

import 'dart:core';
import 'package:pomotimer/common/reflector.dart' as prefix0;
import 'package:pomotimer/states/main_states.dart' as prefix1;

// ignore_for_file: camel_case_types
// ignore_for_file: implementation_imports
// ignore_for_file: prefer_adjacent_string_concatenation
// ignore_for_file: prefer_collection_literals
// ignore_for_file: unnecessary_const

// ignore:unused_import
import 'package:reflectable/mirrors.dart' as m;
// ignore:unused_import
import 'package:reflectable/src/reflectable_builder_based.dart' as r;
// ignore:unused_import
import 'package:reflectable/reflectable.dart' as r show Reflectable;

final _data = <r.Reflectable, r.ReflectorData>{
  const prefix0.Reflector(): r.ReflectorData(
      <m.TypeMirror>[
        r.NonGenericClassMirrorImpl(
            r'MainStates',
            r'.MainStates',
            134217735,
            0,
            const prefix0.Reflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {
              r'': (bool b) => (
                      {timerRunning,
                      startTime,
                      customFocusTime,
                      customShortBreakTime,
                      customLongBreakTime}) =>
                  b
                      ? prefix1.MainStates(
                          customFocusTime: customFocusTime,
                          customLongBreakTime: customLongBreakTime,
                          customShortBreakTime: customShortBreakTime,
                          startTime: startTime,
                          timerRunning: timerRunning)
                      : null,
              r'fromJson': (bool b) =>
                  (json) => b ? prefix1.MainStates.fromJson(json) : null
            },
            -1,
            -1,
            const <int>[-1],
            null,
            {
              r'==': 1,
              r'toString': 0,
              r'noSuchMethod': 1,
              r'hashCode': 0,
              r'runtimeType': 0,
              r'addListener': 1,
              r'removeListener': 1,
              r'dispose': 0,
              r'notifyListeners': 0,
              r'hasListeners': 0,
              r'toJson': 0,
              r'timerRunning': 0,
              r'timerRunning=': 1,
              r'startTime': 0,
              r'startTime=': 1,
              r'customFocusTime': 0,
              r'customFocusTime=': 1,
              r'customShortBreakTime': 0,
              r'customShortBreakTime=': 1,
              r'customLongBreakTime': 0,
              r'customLongBreakTime=': 1
            })
      ],
      null,
      null,
      <Type>[prefix1.MainStates],
      1,
      {
        r'==': (dynamic instance) => (x) => instance == x,
        r'toString': (dynamic instance) => instance.toString,
        r'noSuchMethod': (dynamic instance) => instance.noSuchMethod,
        r'hashCode': (dynamic instance) => instance.hashCode,
        r'runtimeType': (dynamic instance) => instance.runtimeType,
        r'addListener': (dynamic instance) => instance.addListener,
        r'removeListener': (dynamic instance) => instance.removeListener,
        r'dispose': (dynamic instance) => instance.dispose,
        r'notifyListeners': (dynamic instance) => instance.notifyListeners,
        r'hasListeners': (dynamic instance) => instance.hasListeners,
        r'toJson': (dynamic instance) => instance.toJson,
        r'timerRunning': (dynamic instance) => instance.timerRunning,
        r'startTime': (dynamic instance) => instance.startTime,
        r'customFocusTime': (dynamic instance) => instance.customFocusTime,
        r'customShortBreakTime': (dynamic instance) =>
            instance.customShortBreakTime,
        r'customLongBreakTime': (dynamic instance) =>
            instance.customLongBreakTime
      },
      {
        r'timerRunning=': (dynamic instance, value) =>
            instance.timerRunning = value,
        r'startTime=': (dynamic instance, value) => instance.startTime = value,
        r'customFocusTime=': (dynamic instance, value) =>
            instance.customFocusTime = value,
        r'customShortBreakTime=': (dynamic instance, value) =>
            instance.customShortBreakTime = value,
        r'customLongBreakTime=': (dynamic instance, value) =>
            instance.customLongBreakTime = value
      },
      null,
      [
        const [0, 0, null],
        const [1, 0, null],
        const [
          0,
          0,
          const [
            #timerRunning,
            #startTime,
            #customFocusTime,
            #customShortBreakTime,
            #customLongBreakTime
          ]
        ]
      ])
};

final _memberSymbolMap = null;

void initializeReflectable() {
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
